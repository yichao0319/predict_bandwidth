##########
## 
The program includes two parts:
1. parser:    parse tcpdump and generate throughput timeseries
2. predictor: use EWMA/Holt-Winters to predict traffic



##########
## tcpdump
tcpdump -i en3 -w tcpdump.campus.walking.tcp.dat tcp


##########
## Wei's trace
The traces are at /v/filer4b/v27q002/ut-wireless/wdong/mobile_trace

The raw traces are walking.pcap, shuttle.pcap and static.pcap

The throughput per 5 seconds files are walking_throughput_5.txt,
shuttle_throughput_5.txt and static_throughput_5.txt,  the numbers are
in bytes.

shuttle.txt, static.txt and walking.txt have all the sensor readings
that we may use later.


##########
## 1. parser
parse.tcpdump.pl

input:
  input_filename: raw tcpdump data
  interval: in second
  server ip
  server port

output:
  input_filename.throughput.interval.txt
    <time interval> <received data in bytes> <throughput mean> <throughput variance>

e.g.
perl parse.tcpdump.pl tcpdump.home.static.tcp.dat 5 128.83.120.56 22

or use batch script
perl batch_parse.tcpdump.pl


##########
## 2. predictor
predict_traffic.pl

input:
  input_filename: take the output file from parse.tcpdump.pl as input
     <time interval> <received data in bytes> <throughput mean> <throughput variance>
  target: the target to predict
     [THROUGHPUT | VARIANCE]
  prediction method:
     [EWMA | HW | ALL]
  parameters: parameters for prediction method

output:
  input_filename.TARGET.raw.txt
    <time interval> <actual value>
    if TARGET is VARIANCE, then <actual valude> is the variance of the interval
  input_filename.TARGET.METHOD.txt
    <time interval> <predicted value> <TCPVAR-like deviation> <s_ewma> 
  input_filename.TARGET.METHOD.err.txt
    <time interval> <prediction error> 

e.g.
perl predict_traffic.pl tcpdump.campus.walking.tcp.dat.throughput.1.txt THROUGHPUT EWMA 0.1

or use batch script
perl batch_predict_traffic.pl