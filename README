##########
## Project:
2012 
Mobile Adaptive Streaming over HTTP


##########
## 
The program includes the following parts:
1. parser:    parse tcpdump and generate throughput timeseries
2. predictor: use EWMA/Holt-Winters to predict traffic
3. output:    generate the output with format specified by Yousuk
4. sensor parser: parse the sensor data from "xSensor"
5. advance predictor: try to use sensor data to predict performance
6. predictor2: use EWMA/Holt-Winters to predict traffic in N intervals


##########
## tcpdump
tcpdump -i en3 -w tcpdump.campus.walking.tcp.dat tcp


##########
## Wei's trace
The traces are at /v/filer4b/v27q002/ut-wireless/wdong/mobile_trace

The raw traces are walking.pcap, shuttle.pcap and static.pcap

The throughput per 5 seconds files are walking_throughput_5.txt,
shuttle_throughput_5.txt and static_throughput_5.txt,  the numbers are
in bytes.

shuttle.txt, static.txt and walking.txt have all the sensor readings
that we may use later.


##########
## 1. parser
parse.tcpdump.pl

input:
  input_filename: raw tcpdump data
  interval: in second
  server ip
  server port

output:
  input_filename.throughput.interval.txt
    <time interval> <received data in bytes> <throughput mean> <throughput variance>

e.g.
perl parse.tcpdump.pl tcpdump.home.static.tcp.dat 5 128.83.120.56 22

or use batch script
perl batch_parse.tcpdump.pl


##########
## 2. predictor
predict_traffic.pl

input:
  input_filename: take the output file from parse.tcpdump.pl as input
     <time interval> <received data in bytes> <throughput mean> <throughput variance>
  target: the target to predict
     [THROUGHPUT | VARIANCE]
  prediction method:
     [EWMA | HW | ALL]
  parameters: parameters for prediction method

output:
  input_filename.TARGET.raw.txt
    <time interval> <actual value>
    if TARGET is VARIANCE, then <actual valude> is the variance of the interval
  input_filename.TARGET.METHOD.txt
    <time interval> <predicted value> <TCPVAR-like deviation> <s_ewma> 
  input_filename.TARGET.METHOD.err.txt
    <time interval> <prediction error> 

e.g.
perl predict_traffic.pl tcpdump.campus.walking.tcp.dat.throughput.1.txt THROUGHPUT EWMA 0.1

or use batch script
perl batch_predict_traffic.pl


##########
## 3. output required by Yousuk
generate_output.pl

A) actual rate file
0 RATE  62678.6666666667  3473081283.80952
3000  RATE  261390.666666667  15496714106.6667
....

# 1st column : time offset that begins with zero, in msec.
# 2nd column : fixed as "RATE"
# 3rd column : throughput in bytes per second.
# 4th column : actual variance of the interval

B) estimation file
0 0 0
3000  62678.6666666667  3473081283.80952
...

# 1st column : same as above
# 2nd column : estimated network rate in bytes per second.
# 3rd column : estimated network variance.


The files are available:
/v/filer4b/v27q002/ut-wireless/yichao/mobile_streaming/traffic_prediction/PARSEDDATA/

File names are
tcpdump.XXX.tcp.dat.throughput.3.txt.actual.out
tcpdump.XXX.tcp.dat.throughput.3.txt.predicted.YYY.out

where:
  XXX: scenarios (static, walking, shuttle, ...) as described my previous email
  YYY: either use EWMA or HW for prediction


time window size: 3 sec.



##########
## 4. sensor parser: parse the sensor data from "xSensor"
parse.sensor.pl

input:
  input_filename: sensor data
  interval: in second

output:
  input_filename.sensor.interval.txt
    <time> <xMag mean> <xMag var> <yMag mean> <yMag var> <zMag mean> <zMag var> <xAccel mean> <xAccel var> <yAccel mean> <yAccel var> <zAccel mean> <zAccel var> <lat mean> <lat var> <lng mean> <lng var> <alt mean> <alt var> <xRate mean> <xRate var> <yRate mean> <yRate var> <zRate mean> <zRate var> <roll mean> <roll var> <pitch mean> <pitch var> <yaw mean> <yaw var>

e.g.
perl parse.sensor.pl sensor.driving.midnight1.dat 3

or use batch script
perl batch_parse.sensor.pl


##########
## 5. predict with the help of sensor data
corr_sensor_performance.m


##########
## 6. predictor2: use EWMA/Holt-Winters to predict traffic in N intervals
predict_traffic_win.pl


/v/filer4b/v27q002/ut-wireless/yichao/mobile_streaming/traffic_prediction/PARSEDATA2/

The time interval is set to 1 second. In each time slot, EWMA is used to predicted the current and the following 1~10-second bandwidth. The RTTVAR-like error estimation is calculated using the formula:
var = (1-beta) * var + beta * |predicted_bandwidth - actual_bandwidth|;

The file format is:
<time> <actual bw> <prediction of current time slot> <var of current time slot> <prediction of time slot 1> <var of time slot 1> <prediction of time slot 2> <var of time slot 2> <prediction of time slot 3> <var of time slot 3> ...

e.g. 
perl predict_traffic_win.pl tcpdump.campus.walking.tcp.dat.throughput.1.txt THROUGHPUT 3 5 EWMA 0.1

or use batch script
perl batch_predict_traffic_win.pl


